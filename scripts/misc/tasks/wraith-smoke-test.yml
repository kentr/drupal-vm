---

- name: Disable error logging.
  lineinfile:
    path: "{{ drupal_core_path }}/sites/{{ config_site_directory }}/settings.local.php"
    state: present
    insertafter: \s*\$config\['system.logging'\]\['error_level'\] = '.*?';
    line: $config['system.logging']['error_level'] = 'hide'; // ANSIBLE TEMP run-updates.yml
  when: project_type == 'drupal' and drupal_major_version | version_compare('8', '>=')

- name: Disable development services.
  lineinfile:
    path: "{{ drupal_core_path }}/sites/{{ config_site_directory }}/settings.local.php"
    state: present
    backrefs: true
    regexp: (\s*\$settings\['container_yamls'\]\[\] = DRUPAL_ROOT . '/sites/development.services.yml';)
    line: // \1 // ANSIBLE TEMP run-updates.yml
  when: project_type == 'drupal' and drupal_major_version | version_compare('8', '>=')

- name: Disable render cache override.
  lineinfile:
    path: "{{ drupal_core_path }}/sites/{{ config_site_directory }}/settings.local.php"
    state: present
    backrefs: true
    regexp: (\s*\$settings\['cache'\]\['bins'\]\['render'\] = 'cache.backend.null';)
    line: // \1 // ANSIBLE TEMP run-updates.yml
  when: project_type == 'drupal' and drupal_major_version | version_compare('8', '>=')

- name: Disable dynamic_page_cache override.
  lineinfile:
    path: "{{ drupal_core_path }}/sites/{{ config_site_directory }}/settings.local.php"
    state: present
    backrefs: true
    regexp: (\s*\$settings\['cache'\]\['bins'\]\['dynamic_page_cache'\] = 'cache.backend.null';)
    line: // \1 // ANSIBLE TEMP run-updates.yml
  when: project_type == 'drupal' and drupal_major_version | version_compare('8', '>=')

- name: Check gems path.
  command: ruby -rubygems -e 'puts Gem.user_dir'
  become: No
  register: gems_path_check
  when: gems_path is undefined

- name: Set gems path.
  set_fact:
    gems_path: "{{ gems_path_check.stdout }}"
  when: gems_path is undefined

- name: Run wraith smoke test.
  command: "wraith capture configs/smoke.local.yml"
  become: no
  args:
    chdir: "{{ wraith_testing_framework.install_dir }}"
  environment:
    PATH: "{{ npm_config_prefix }}/bin:{{ gems_path }}/bin:{{ ansible_env.PATH }}:$PATH"
  when: wraith_testing_framework.install | default(False) and wraith_testing_framework.install_dir is defined and gems_path is defined

- name: Restore previous error logging level.
  lineinfile:
    path: "{{ drupal_core_path }}/sites/{{ config_site_directory }}/settings.local.php"
    state: absent
    line: $config['system.logging']['error_level'] = 'hide'; // ANSIBLE TEMP run-updates.yml

- name: Restore development services.
  lineinfile:
    path: "{{ drupal_core_path }}/sites/{{ config_site_directory }}/settings.local.php"
    state: present
    backrefs: true
    regexp: // (\s*\$settings\['container_yamls'\]\[\] = DRUPAL_ROOT . '/sites/development.services.yml';)
    line: \1
  when: project_type == 'drupal' and drupal_major_version | version_compare('8', '>=')

- name: Restore render cache override.
  lineinfile:
    path: "{{ drupal_core_path }}/sites/{{ config_site_directory }}/settings.local.php"
    state: present
    backrefs: true
    regexp: // (\s*\$settings\['cache'\]\['bins'\]\['render'\] = 'cache.backend.null';)
    line: \1
  when: project_type == 'drupal' and drupal_major_version | version_compare('8', '>=')

- name: Restore dynamic_page_cache override.
  lineinfile:
    path: "{{ drupal_core_path }}/sites/{{ config_site_directory }}/settings.local.php"
    state: present
    backrefs: true
    regexp: // (\s*\$settings\['cache'\]\['bins'\]\['dynamic_page_cache'\] = 'cache.backend.null';)
    line: \1
  when: project_type == 'drupal' and drupal_major_version | version_compare('8', '>=')
