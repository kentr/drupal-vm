---
# Tasks for installing pre-existing web app project onto VM.
# Slightly different functionality from the drupal role deploy tasks.

# Workaround for NFS synced folders, since it's not possible to change
# file owner / group.
# Checks parent folder instead of `/vagrant` because `/vagrant`
# may not exist.
#
# From `drupalvm.www` role:
# ---
# When using NFS the group id of a folder will be identical to that of the host
# machine, but the groupname will differ or not exist. For the latter case
# we create a group called `vagrant_group`.
#
# In Ansible 2.3+ the gr_name will be set if the GID is mapped to an existing
# group. If the GID doesn't exist, gr_name will be undefined.
# ---
# The above quote implies that in some cases Ansible 2.3+, `gr_name`
# will be undefined or set to a value corresponding to an existing group.
# For me, that value has consistently been `dialout`.
- block:
    - name: Get information about `web_app_project_root` parent directory.
      stat:
        get_checksum: false
        path: "{{ web_app_project_root | dirname }}"
      register: web_app_deploy_dir_parent_check

    - block:
      - name: Set `drupal_core_owner`.
        set_fact:
          drupal_core_owner: "{{ web_app_deploy_dir_parent_check.stat.uid }}"
      - name: Set `drupal_core_group`.
        set_fact:
          drupal_core_group: "{{ web_app_deploy_dir_parent_check.stat.gr_name }}"

      when: web_app_deploy_dir_parent_check.stat.exists and (web_app_deploy_dir_parent_check.stat.gr_name == 'vagrant_group' or web_app_deploy_dir_parent_check.stat.gr_name == 'dialout' or web_app_deploy_dir_parent_check.stat.gr_name is undefined)

- name: Custom core - Ensure web_app_project_root directory exists.
  file:
    path: "{{ web_app_project_root }}"
    state: directory
    # Don't recursively set permissions.  May cause dirty repo.
    recurse: no
    mode: 0775
    owner: "{{ (drupal_core_group == 'vagrant_group' or drupal_core_group == 'dialout') | ternary(omit, drupal_core_owner) }}"
    group: "{{ (drupal_core_group == 'vagrant_group' or drupal_core_group == 'dialout') | ternary(omit, drupalvm_webserver_user) }}"
  become: yes
  ignore_errors: True
  when: project_type == "drupal" and web_app_project_root is defined

- name: Custom core - ensure sites/default directory exists and is writable.
  file:
    path: "{{ drupal_core_path }}/sites/default"
    mode: "ug+w"
    state: directory
  when: project_type == "drupal"

- name: Ensure public files directory exists.
  file:
    path: "{{ drupal_core_path }}/{{ drupal_file_public_path }}"
    state: directory
    owner: "{{ (drupal_core_group == 'vagrant_group' or drupal_core_group == 'dialout') | ternary(omit, drupal_core_owner) }}"
    group: "{{ (drupal_core_group == 'vagrant_group' or drupal_core_group == 'dialout') | ternary(omit, drupalvm_webserver_user) }}"
    mode: 0775
    recurse: True
  when: project_type == "drupal" and drupal_file_public_path is defined and drupal_file_public_path | trim != ''

- name: Ensure private files directory.
  file:
    path: "{{ drupal_file_private_path }}"
    state: directory
    owner: "{{ (drupal_core_group == 'vagrant_group' or drupal_core_group == 'dialout') | ternary(omit, drupal_core_owner) }}"
    group: "{{ (drupal_core_group == 'vagrant_group' or drupal_core_group == 'dialout') | ternary(omit, drupalvm_webserver_user) }}"
    mode: 0775
    recurse: True
  when: project_type == "drupal" and drupal_file_private_path is defined and drupal_file_private_path | trim != ''

- name: Ensure private files .htaccess.
  template:
    # Src is relative to provisioning directory.
    src: "../scripts/post-provision/templates/private_files_htaccess.j2"
    dest: "{{ drupal_file_private_path }}/.htaccess"
    force: No
  when: project_type == "drupal" and drupal_file_private_path is defined and drupal_file_private_path | trim != ''

- name: Ensure config directory exists and is writable.
  file:
    path: "{{ drupal_config_directory }}"
    state: directory
    owner: "{{ (drupal_core_group == 'vagrant_group' or drupal_core_group == 'dialout') | ternary(omit, drupal_core_owner) }}"
    group: "{{ (drupal_core_group == 'vagrant_group' or drupal_core_group == 'dialout') | ternary(omit, drupalvm_webserver_user) }}"
    mode: 0774
  when: project_type == 'drupal'

- name: Ensure config sync directory.
  file:
    path: "{{ drupal_config_sync_directory }}"
    state: directory
    owner: "{{ (drupal_core_group == 'vagrant_group' or drupal_core_group == 'dialout') | ternary(omit, drupal_core_owner) }}"
    group: "{{ (drupal_core_group == 'vagrant_group' or drupal_core_group == 'dialout') | ternary(omit, drupalvm_webserver_user) }}"
    mode: 0770
  when: project_type == 'drupal' and drupal_major_version is version('8', '>=') and drupal_config_sync_directory is defined

# Pantheon D7 sites don't have settings.php, so we add it for local dev.
- name: Custom core - add settings.php if it doesn't exist.
  template:
    # Src is relative to provisioning directory.
    src: "../scripts/post-provision/templates/default.settings.php.d{{ drupal_major_version }}.j2"
    dest: "{{ drupal_core_path }}/{{ drupal_config_directory }}/settings.php"
    mode: 0440
    force: no
    owner: "{{ (drupal_core_group == 'vagrant_group' or drupal_core_group == 'dialout') | ternary(omit, drupal_core_owner) }}"
    group: "{{ (drupal_core_group == 'vagrant_group' or drupal_core_group == 'dialout') | ternary(omit, drupalvm_webserver_user) }}"
  when: project_type == "drupal" and custom_core_add_settings_local_php|default(True)

- name: Custom core - add settings.local.php.
  template:
    # Src is relative to provisioning directory.
    src: "../scripts/post-provision/templates/settings.local.php.d{{ drupal_major_version }}.j2"
    dest: "{{ drupal_core_path }}/{{ drupal_config_directory }}/settings.local.php"
    mode: 0440
    owner: "{{ (drupal_core_group == 'vagrant_group' or drupal_core_group == 'dialout') | ternary(omit, drupal_core_owner) }}"
    group: "{{ (drupal_core_group == 'vagrant_group' or drupal_core_group == 'dialout') | ternary(omit, drupalvm_webserver_user) }}"
  when: project_type == "drupal" and custom_core_add_settings_local_php|default(True)
