---
# Tasks for installing pre-existing web app project onto VM.

- name: Register information about the /vagrant directory.
  stat:
    path: /vagrant
  register: vagrant_directory

- name: Custom core - Ensure web_app_project_root directory exists.
  file:
    path: "{{ web_app_project_root }}"
    state: directory
    # Don't recursively set permissions.  May cause dirty repo.
    recurse: no
    mode: 0775
    owner: "{{ (vagrant_directory.stat.gr_name == 'vagrant_group') | ternary(omit, drupal_core_owner) }}"
    group: "{{ (vagrant_directory.stat.gr_name == 'vagrant_group') | ternary(omit, drupalvm_webserver_user) }}"
  become: yes
  ignore_errors: True
  when: project_type == "drupal" and web_app_project_root is defined

- name: Custom core - ensure sites/default directory exists and is writable.
  file:
    path: "{{ drupal_core_path }}/sites/default"
    mode: "ug+w"
    state: directory
  when: project_type == "drupal"

- name: Ensure public files directory.
  file:
    path: "{{ drupal_core_path }}/{{ drupal_file_public_path }}"
    state: directory
    owner: "{{ (vagrant_directory.stat.gr_name == 'vagrant_group') | ternary(omit, drupal_core_owner) }}"
    group: "{{ (vagrant_directory.stat.gr_name == 'vagrant_group') | ternary(omit, drupalvm_webserver_user) }}"
    mode: 0775
    recurse: True
  when: project_type == "drupal" and drupal_file_public_path is defined and drupal_file_public_path | trim != ''

- name: Ensure private files directory.
  file:
    path: "{{ drupal_file_private_path }}"
    state: directory
    owner: "{{ (vagrant_directory.stat.gr_name == 'vagrant_group') | ternary(omit, drupal_core_owner) }}"
    group: "{{ (vagrant_directory.stat.gr_name == 'vagrant_group') | ternary(omit, drupalvm_webserver_user) }}"
    mode: 0775
    recurse: True
  when: project_type == "drupal" and drupal_file_private_path is defined and drupal_file_private_path | trim != ''

- name: Ensure private files .htaccess.
  template:
    # Src is relative to provisioning directory.
    src: "../scripts/post-provision/templates/private_files_htaccess.j2"
    dest: "{{ drupal_file_private_path }}/.htaccess"
    force: No
  when: project_type == "drupal" and drupal_file_private_path is defined and drupal_file_private_path | trim != ''

- name: Ensure config sync directory.
  file:
    path: "{{ drupal_config_sync_directory }}"
    state: directory
    owner: "{{ (vagrant_directory.stat.gr_name == 'vagrant_group') | ternary(omit, drupal_core_owner) }}"
    group: "{{ (vagrant_directory.stat.gr_name == 'vagrant_group') | ternary(omit, drupalvm_webserver_user) }}"
    mode: 0770
  when: project_type == 'drupal' and drupal_major_version | version_compare('8', '>=') and drupal_config_sync_directory is defined

# Pantheon D7 sites don't have settings.php, so we add it for local dev.
- name: Custom core - add settings.php if it doesn't exist.
  template:
    # Src is relative to provisioning directory.
    src: "../scripts/post-provision/templates/default.settings.php.d{{ drupal_major_version }}.j2"
    dest: "{{ drupal_core_path }}/sites/{{ config_site_directory | default('default') }}/settings.php"
    mode: 0440
    force: no
    owner: "{{ (vagrant_directory.stat.gr_name == 'vagrant_group') | ternary(omit, drupal_core_owner) }}"
    group: "{{ (vagrant_directory.stat.gr_name == 'vagrant_group') | ternary(omit, drupalvm_webserver_user) }}"
  when: project_type == "drupal" and custom_core_add_settings_local_php|default(True)

- name: Custom core - add settings.local.php.
  template:
    # Src is relative to provisioning directory.
    src: "../scripts/post-provision/templates/settings.local.php.d{{ drupal_major_version }}.j2"
    dest: "{{ drupal_core_path }}/sites/{{ config_site_directory | default('default') }}/settings.local.php"
    mode: 0440
    owner: "{{ (vagrant_directory.stat.gr_name == 'vagrant_group') | ternary(omit, drupal_core_owner) }}"
    group: "{{ (vagrant_directory.stat.gr_name == 'vagrant_group') | ternary(omit, drupalvm_webserver_user) }}"
  when: project_type == "drupal" and custom_core_add_settings_local_php|default(True)
