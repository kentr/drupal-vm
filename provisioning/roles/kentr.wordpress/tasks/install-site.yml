---

- name: Check if site is already installed.
  become: no
  # The `--allow-root` flag is currently required by the
  # Docker driver tests, which run as `root`.  The default is
  # `false` so that WP-CLI will complain by default if someone
  # accidentally runs the role with `root` as the ansible user.
  command: |
    wp \
    --path={{ wp_install_dir }} \
    --url={{ wp_domain }} \
    {{ '--allow-root' if wp_cli_allow_as_root|default(false) else '' }} \
    core is-installed
  register: wp_site_installed_check
  failed_when: wp_site_installed_check.stderr_lines|length|bool
  # For idempotence.
  changed_when: false

- name: Set `wp_site_already_installed`.
  set_fact:
    wp_site_already_installed: "{{ wp_site_installed_check.rc == 0 }}"

- block:
    - name: Install site with `wp-cli`.
      become: no
      # The `--allow-root` flag is currently required by the
      # Docker driver tests, which run as `root`.  The default is
      # `false` so that WP-CLI will complain by default if someone
      # accidentally runs the role with `root` as the ansible user.
      command: |
        wp \
        --path={{ wp_install_dir }} \
        --url={{ wp_domain }} \
        --admin_user={{ wp_admin_user }} \
        --admin_password={{ wp_admin_password }} \
        --admin_email={{ wp_admin_email }} \
        --title='{{ wp_site_title }}' \
        {{ '--allow-root' if wp_cli_allow_as_root|default(false) else '' }} \
        core install

    - name: Update default plugins with `wp-cli`.
      become: no
      # The `--allow-root` flag is currently required by the
      # Docker driver tests, which run as `root`.  The default is
      # `false` so that WP-CLI will complain by default if someone
      # accidentally runs the role with `root` as the ansible user.
      command: |
        wp \
        --path={{ wp_install_dir }} \
        {{ '--allow-root' if wp_cli_allow_as_root|default(false) else '' }} \
        plugin \
        update \
        --all


  when: not wp_site_already_installed
