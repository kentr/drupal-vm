---
- name: Register information about the `wp_install_dir` directory.
  stat:
    path: "{{ wp_install_dir }}"
    get_checksum: no

  register: wp_install_dir_info

- name: Create or restore site database.
  include: mysql.yml
  when: wp_mysql_enable

- name: Ensure that installation directory exists.
  file:
    path: "{{ wp_install_dir }}"
    state: directory

- name: Deploy WordPress if configured.
  include: tasks/deploy.yml
  when: wp_deploy

- name: Get information about index.php.
  stat:
    path: "{{ wp_install_dir }}/index.php"
  register: index_file

- name: Define wordpress_site_exists.
  set_fact:
    wordpress_site_exists: "{{ index_file.stat.exists|default(false) }}"

- name: Download WordPress if configured.
  include: tasks/download-wordpress.yml
  when: install_wordpress | default(False) and not wordpress_site_exists

- name: Fetch random salts for `wp-config.php`.
  command: curl https://api.wordpress.org/secret-key/1.1/salt/
  register: 'wp_salt'
  creates: "{{ wp_install_dir }}/wp-config.php"

- name: Block access to `debug.log`.
  blockinfile:
    path: "{{ wp_install_dir }}/wp-content/.htaccess"
    create: yes
    mode: u=r,g=r,o=
    marker: "# {mark} ANSIBLE MANAGED BLOCK: Block access to `debug.log`"
    block: |
      <Files "debug.log">
         deny from all
      </Files>
  when: wp_debug_log

- name: Block access to `wp-config.php`.
  blockinfile:
    path: "{{ wp_install_dir }}/wp-content/.htaccess"
    create: yes
    mode: u=r,g=r,o=
    marker: "# {mark} ANSIBLE MANAGED BLOCK: Block access to `wp-config.php`"
    block: |
      <Files "wp-config.php">
         deny from all
      </Files>

- name: Copy `wp-config.php` file.
  template:
    src: wp-config.php.j2
    dest: "{{ wp_install_dir }}/wp-config.php"

- name: Change ownership of installation directory.
  file:
    path: "{{ wp_install_dir }}"
    owner: "{{ wp_core_owner }}"
    group: "{{ wp_core_group }}"
    state: directory
    recurse: yes
  # If `group_name` == "vagrant_group", we assume this an NFS or SSHFS mount
  # under DrupalVM.
  # See drupalvm.www/tasks/main.yml
  # TODO: Correct this to be independent of DrupalVM.
  when: wp_install_dir_info.stat.gr_name != 'vagrant_group'

- name: Install WordPress site if configured.
  include: tasks/install-site.yml
  when: wp_install_site

- name: Install dummy data if configured.
  include: tasks/install-dummy-data.yml
  when: wp_install_dummy_data
