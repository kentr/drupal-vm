---
##########################################################################################
# Sets up remote Drush aliases for a site def.
#
# Expects parameter:
# item:
#   root: Required. Absolute path to the item's root web folder.  No default.
#
#   env: Required. The environment for this installation.  Will be the ".xyz" suffix
#       for the alias.  Typical value would be one of [dev | stage | prod].
#
#   uri: Required. Full URI of site home page, including protocol (http / https).
#
#   site_directory: Optional. Directory under "sites/" that holds settings.php, etc.
#       Default is 'default'
#
#   drush_alias_file_prefix: Optional. Prefix for drush alias file. Determines the
#       prefix used in the site alias.  E.g., a value of "my-site" creates the aliases
#       "@my-site", "@my-site.*".
#       Defaults to the Ansible inventory_hostname.
##########################################################################################


# ----------------------------------------------
# REMOTE

- name: Ensure remote Drush alias file exists.
  template:
    # Don't overwrite existing file.
    force: no
    dest: "~/.drush/{{ item.drush_alias_file_prefix | default(inventory_hostname) }}.aliases.drushrc.php"
    src: templates/drush.aliases.drushrc.php.j2

- name: Insert remote Drush alias declarations.
  become: no
  blockinfile:
    dest: "~/.drush/{{ item.drush_alias_file_prefix | default(inventory_hostname) }}.aliases.drushrc.php"
    marker: "// {mark} ANSIBLE MANAGED BLOCK: @{{ item.drush_alias_file_prefix | default(inventory_hostname) }}.{{ item.env }}"
    state: present
    content:  "{{ lookup('template', 'templates/single-alias-block.j2') }}"
  when: item.uri is defined and drush_aliases_remote | default(False)

# ----------------------------------------------
# LOCAL

- name: Ensure local Drush alias file exists.
  delegate_to: 127.0.0.1
  template:
    # Don't overwrite existing file.
    force: no
    dest: "~/.drush/{{ item.drush_alias_file_prefix | default(inventory_hostname) }}.aliases.drushrc.php"
    src: templates/drush.aliases.drushrc.php.j2

- name: Insert local Drush alias declarations.
  delegate_to: 127.0.0.1
  become: no
  blockinfile:
    dest: "~/.drush/{{ item.drush_alias_file_prefix | default(inventory_hostname) }}.aliases.drushrc.php"
    marker: "// {mark} ANSIBLE MANAGED BLOCK: @{{ item.drush_alias_file_prefix | default(inventory_hostname) }}.{{ item.env }}"
    state: present
    content: |
      $aliases['{{ item.env }}'] = array(
        // base URL
        'uri' => '{{ item.uri | default('default') }}',
        // drupal_core_path.
        'root' => '{{ item.root }}',
        'remote-host' => '{{ item.ssh_host }}',
        'remote-user' => '{{ item.ssh_user }}',
        'ssh-options' => '{{ item.drush_ssh_options | default(drush_ssh_options) }}',
        'source-command-specific' => array (
          'sql-sync' => array (
            'structure-tables-key' => 'common',
          ),
        ),
        'target-command-specific' => array (
          'sql-sync' => array (
            'enable' => array(
              'devel',
              'diff',
            ),
          ),
        ),
        'command-specific' => array (
          'sql-dump' => array (
            'structure-tables-key' => 'common',
            'gzip' => '1',
          ),
          'archive-dump' => array (
            'structure-tables-key' => 'common',
          ),
          'rsync' => array (
            'mode' => '{{ drush_rsync_mode }}',
            'exclude-paths' => '{{ drush_rsync_excludes }}',
          ),
        ),
      );
  when: item.uri is defined and drush_aliases_local | default(False)
