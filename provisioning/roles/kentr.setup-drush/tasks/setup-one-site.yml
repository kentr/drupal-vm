---
##########################################################################################
# Sets up remote Drush aliases for a site def.
#
# Expects parameter:
# item:
#   ssh_host: Required. Hostname that Drush should use for SSH (remote) operations.
#
#   ssh_user: Required. User that Drush should use for SSH (remote) operations.
#
#   drush_ssh_options: Required. Additional options that Drush should use for SSH (remote)
#       operations.
#
#   root: Required. Absolute path to the item's root web folder.  No default.
#
#   env: Required. The environment for this installation.  Will be the ".xyz" suffix
#       for the alias.  Typical value would be one of [dev | stage | prod].
#
#   uri: Required. Full URI of site home page, including protocol (http / https).
#
#   site_directory: Optional. Directory under "sites/" that holds settings.php, etc.
#       Default is 'default'
#
#   drush_alias_file_prefix: Optional. Prefix for drush alias file. Determines the
#       prefix used in the site alias.  E.g., a value of "my-site" creates the aliases
#       "@my-site", "@my-site.*".
#       Defaults to the Ansible inventory_hostname.
#
#   drush_alias_include_on_remote_node: EXPERIMENTAL. Optional.  Default = True.  If True,
#       an alias definition for this item will be on the remote node.
#
#   drush_alias_is_local_on_remote_node: Optional.  If True, the alias
#       created for this item on the remote node will be configured as a "local" alias.
#       It will not have SSH connection information, and Drush will behave as though the
#       site is on the machine on which Drush is run.
#
#       Defaults:
#         - True the `env` property is in ['prod', 'stage'].
#         - False otherwise.
#
#       Note that for aliases created on `localhost`, this value is ignored and all aliases
#       are created as "remote" aliases
##########################################################################################


# ----------------------------------------------
# REMOTE

- name: Ensure remote Drush alias file exists.
  template:
    # Don't overwrite existing file.
    force: no
    dest: "~/.drush/{{ item.drush_alias_file_prefix | default(inventory_hostname) }}.aliases.drushrc.php"
    src: templates/drush.aliases.drushrc.php.j2

- name: Insert remote Drush alias declarations.
  become: no
  blockinfile:
    dest: "~/.drush/{{ item.drush_alias_file_prefix | default(inventory_hostname) }}.aliases.drushrc.php"
    marker: "// {mark} ANSIBLE MANAGED BLOCK: @{{ item.drush_alias_file_prefix | default(inventory_hostname) }}.{{ item.env }}"
    state: present
    content:  "{{ lookup('template', 'templates/single-alias-block.j2') }}"
  when: item.uri is defined and drush_aliases_remote | default(False)

# ----------------------------------------------
# LOCAL

- name: Ensure local Drush alias file exists.
  delegate_to: 127.0.0.1
  template:
    # Don't overwrite existing file.
    force: no
    dest: "~/.drush/{{ item.drush_alias_file_prefix | default(inventory_hostname) }}.aliases.drushrc.php"
    src: templates/drush.aliases.drushrc.php.j2

- name: Set `drush_all_aliases_remote`.
  set_fact:
    drush_all_aliases_remote: True

- name: Insert local Drush alias declarations.
  delegate_to: 127.0.0.1
  become: no
  blockinfile:
    dest: "~/.drush/{{ item.drush_alias_file_prefix | default(inventory_hostname) }}.aliases.drushrc.php"
    marker: "// {mark} ANSIBLE MANAGED BLOCK: @{{ item.drush_alias_file_prefix | default(inventory_hostname) }}.{{ item.env }}"
    state: present
    content:  "{{ lookup('template', 'templates/single-alias-block.j2') }}"
  when: item.uri is defined and drush_aliases_local | default(False)
